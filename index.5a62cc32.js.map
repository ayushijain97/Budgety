{"mappings":"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","sources":["./script.js"],"sourcesContent":["drag = function (ev) {\n  // console.log(\"Dragging ....\", ev);\n  ev.dataTransfer.setData(\"text\", ev.target.id);\n};\nallowDrop = function (event) {\n  // console.log(\"Allowing drop ....\", event);\n  event.preventDefault();\n};\ndropInsideIncome = function (ev) {\n  console.log(\"Inside Income\");\n  var splitID, type, ID, deletedItem;\n  console.log(\"Dropping drop ....\", ev);\n  ev.preventDefault();\n  var data = ev.dataTransfer.getData(\"text\");\n  if (data) {\n    //inc-1;\n    splitID = data.split(\"-\");\n    type = splitID[0];\n    ID = parseInt(splitID[1]);\n    deletedItem = budgetController.deleteItem(type, ID);\n\n    //deletedItem ID, type, description\n    // budgetController.addItem();\n    console.log(deletedItem.value);\n    newItemGenerated = budgetController.addItem(\n      \"inc\",\n      deletedItem.description,\n      deletedItem.value\n    );\n\n    // Removing the dragged item from Income box\n    document.getElementById(data).remove();\n\n    UIController.addListItem(newItemGenerated, \"inc\");\n\n    // localStorage.setItem(\"Data\", JSON.stringify(newItemGenerated));\n\n    // 1. calculate the budget\n    budgetController.calculateBudget();\n\n    // 2. Return the budget\n    var budget = budgetController.getBudget();\n\n    // 3.Display the budget on the UI.\n    UIController.displayBudget(budget);\n\n    console.log(data);\n  }\n};\n\ndropInsideExpense = function (ev) {\n  console.log(\"Inside Expense\");\n\n  var splitID, type, ID, deletedItem;\n  console.log(\"Dropping drop ....\", ev);\n  ev.preventDefault();\n  var data = ev.dataTransfer.getData(\"text\");\n  if (data) {\n    //inc-1;\n    splitID = data.split(\"-\");\n    type = splitID[0];\n    ID = parseInt(splitID[1]);\n    deletedItem = budgetController.deleteItem(type, ID);\n\n    //deletedItem ID, type, description\n    // budgetController.addItem();\n    console.log(deletedItem.value);\n    newItemGenerated = budgetController.addItem(\n      \"exp\",\n      deletedItem.description,\n      deletedItem.value\n    );\n\n    // Removing the dragged item from Income box\n    document.getElementById(data).remove();\n\n    UIController.addListItem(newItemGenerated, \"exp\");\n    // localStorage.setItem(\"Data\", JSON.stringify(newItemGenerated));\n\n    // 1. calculate the budget\n    budgetController.calculateBudget();\n\n    // 2. Return the budget\n    var budget = budgetController.getBudget();\n\n    // 3.Display the budget on the UI.\n    UIController.displayBudget(budget);\n\n    console.log(data);\n  }\n};\n\n// Budget controller\nvar budgetController = (function () {\n  var Expenses = function (id, description, value) {\n    this.id = id;\n    this.description = description;\n    this.value = value;\n    this.percentage = -1;\n  };\n  Expenses.prototype.calcPercentage = function (totalIncome) {\n    if (totalIncome > 0) {\n      this.percentage = Math.round((this.value / totalIncome) * 100);\n    } else {\n      this.percentage = -1;\n    }\n  };\n  Expenses.prototype.getPercentage = function () {\n    return this.percentage;\n  };\n  var Income = function (id, description, value) {\n    this.id = id;\n    this.description = description;\n    this.value = value;\n  };\n  var calculateTotal = function (type) {\n    var sum = 0;\n    data.allItems[type].forEach(function (cur) {\n      sum = sum + cur.value;\n    });\n    data.totals[type] = sum;\n  };\n  var data = {\n    allItems: {\n      exp: [],\n      inc: [],\n    },\n    totals: {\n      exp: 0,\n      inc: 0,\n    },\n    budget: 0,\n    percentage: -1,\n  };\n\n  return {\n    addItem: function (type, des, val) {\n      var newItem, ID;\n\n      //[1,2,3,4,5],next ID=6\n      //[1,2,4,6,8],next ID=9\n      //ID=lastID+1\n\n      // //create the new ID\n      // if (data.allItems[type].length > 0) {\n      //   ID = data.allItems[type][data.allItems[type].length - 1].id + 1;\n      // } else {\n      //   ID = 0;\n      // }\n      totalLength = data.allItems[type].length;\n\n      //create new item based on the type\n      if (type === \"exp\") {\n        newItem = new Expenses(type + \"-\" + totalLength, des, val);\n      } else if (type === \"inc\") {\n        newItem = new Income(type + \"-\" + totalLength, des, val);\n      }\n\n      //pushing the data into the array\n      data.allItems[type].push(newItem);\n\n      //return new item\n      return newItem;\n    },\n    deleteItem: function (type, id) {\n      var ids, index, values;\n      ids = data.allItems[type].map(function (current) {\n        return current.id;\n      });\n      index = ids.indexOf(type + \"-\" + id);\n      if (index !== -1) {\n        itemToBeDeleted = data.allItems[type][index];\n        data.allItems[type].splice(index, 1);\n        return itemToBeDeleted;\n      }\n      localStorage.setItem(\"Data\", JSON.stringify(data));\n    },\n    calculateBudget: function () {\n      //calculate total income and expenses\n      calculateTotal(\"inc\");\n      calculateTotal(\"exp\");\n\n      // calculate the budget: income - expenses\n      data.budget = data.totals.inc - data.totals.exp;\n\n      //calculate the percentage of the income that we spent\n      if (data.totals.inc > 0) {\n        data.percentage = Math.round((data.totals.exp / data.totals.inc) * 100);\n      } else {\n        data.percentage = -1;\n      }\n      localStorage.setItem(\"Data\", JSON.stringify(data));\n    },\n    calculatePercentage: function () {\n      data.allItems.exp.forEach(function (cur) {\n        cur.calcPercentage(data.totals.inc);\n      });\n      localStorage.setItem(\"Data\", JSON.stringify(data));\n    },\n    getPercentage: function () {\n      var allPerc = data.allItems.exp.map(function (cur) {\n        return cur.getPercentage();\n      });\n      return allPerc;\n    },\n    getBudget: function () {\n      return {\n        budget: data.budget,\n        totalInc: data.totals.inc,\n        totalExp: data.totals.exp,\n        percentage: data.percentage,\n      };\n    },\n    testing: function () {\n      console.log(data);\n    },\n  };\n})();\n\n// UI controller\nvar UIController = (function () {\n  var DOMstrings = {\n    inputtype: \".add__type\",\n    inputdescription: \".add__description\",\n    inputvalue: \".add__value\",\n    inputBtn: \".add__btn\",\n    incomeContainer: \".income__list\",\n    expenseContainer: \".expenses__list\",\n    budgetLabel: \".budget__value\",\n    incomeLabel: \".budget__income--value\",\n    expenseLabel: \".budget__expenses--value\",\n    percentageLabel: \".budget__expenses--percentage\",\n    container: \".container\",\n    expensesPercLabel: \".item__percentage\",\n    resetBtn: \".btn\",\n    month: \".budget__title--month\",\n  };\n\n  /*\n\n        Formatting the data(we are using private function as \n          we dont need this function from any other object or function)\n\n    */\n  var formatNumber = function (num, type) {\n    var numSplit, int, dec;\n    /*\n              + or - before number\n              exactly two decimal point\n              comma seperating the thousands\n    \n              2314.2468  ->    + 2,314.24\n              \n           */\n    num = Math.abs(num);\n    num = num.toFixed(2);\n    numSplit = num.split(\".\");\n    int = numSplit[0];\n    if (int.length > 3) {\n      int =\n        int.substr(0, int.length - 3) +\n        \",\" +\n        int.substr(int.length - 3, int.length);\n    }\n    dec = numSplit[1];\n\n    return (type === \"exp\" ? \"-\" : \"+\") + \" \" + int + \".\" + dec;\n  };\n  var nodeListForEach = function (list, callback) {\n    for (var i = 0; i < list.length; i++) {\n      callback(list[i], i);\n    }\n  };\n\n  return {\n    getinput: function () {\n      return {\n        type: document.querySelector(DOMstrings.inputtype).value, //will either inc or exp\n        description: document.querySelector(DOMstrings.inputdescription).value,\n        value: parseFloat(document.querySelector(DOMstrings.inputvalue).value),\n      };\n    },\n    addListItem: function (obj, type) {\n      var html, newHtml, element;\n\n      // create html string with placeholder text\n      if (type === \"inc\") {\n        element = DOMstrings.incomeContainer;\n        html = `\n        <div class=\"item clearfix\" id=\"%id%\" draggable=\"true\" ondragstart=\"drag(event)\">\n              <div class=\"item__description\">%description%</div>\n                <div class=\"right clearfix\"><div class=\"item__value\">%value%</div>\n                <div class=\"item__delete\">\n                  <button class=\"item__delete--btn\"><i class=\"ion-ios-close-outline\"></i></button>\n                </div>\n          </div>\n        </div>\n        `;\n      } else if (type === \"exp\") {\n        element = DOMstrings.expenseContainer;\n        html = `\n          <div class=\"item clearfix\" id=\"%id%\" draggable=\"true\" ondragstart=\"drag(event)\">\n            <div class=\"item__description\">%description%</div>\n            <div class=\"right clearfix\">\n              <div class=\"item__value\">%value%</div>\n              <div class=\"item__percentage\">21%</div>\n              <div class=\"item__delete\">\n                <button class=\"item__delete--btn\">\n                  <i class=\"ion-ios-close-outline\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n        `;\n      }\n\n      // Replace the placeholder text with some actual data\n      newHtml = html.replace(\"%id%\", obj.id);\n      newHtml = newHtml.replace(\"%description%\", obj.description);\n      newHtml = newHtml.replace(\"%value%\", formatNumber(obj.value, type));\n\n      //Insert the html into the DOM\n      document.querySelector(element).insertAdjacentHTML(\"beforeend\", newHtml);\n    },\n    deleteListItems: function (selectorID) {\n      var el = document.getElementById(selectorID);\n      el.parentNode.removeChild(el);\n    },\n    clearFields: function () {\n      var fields, fieldArr;\n      fields = document.querySelectorAll(\n        DOMstrings.inputdescription + \", \" + DOMstrings.inputvalue\n      );\n\n      fieldArr = Array.prototype.slice.call(fields);\n\n      fieldArr.forEach(function (current, index, array) {\n        current.value = \"\";\n      });\n\n      fieldArr[0].focus();\n    },\n    displayBudget: function (obj) {\n      var type;\n      obj.budget > 0 ? (type = \"inc\") : (type = \"exp\");\n\n      document.querySelector(DOMstrings.budgetLabel).textContent = formatNumber(\n        obj.budget,\n        type\n      );\n      document.querySelector(DOMstrings.incomeLabel).textContent = formatNumber(\n        obj.totalInc,\n        \"inc\"\n      );\n      document.querySelector(DOMstrings.expenseLabel).textContent =\n        formatNumber(obj.totalExp, \"exp\");\n      if (obj.percentage > 0) {\n        document.querySelector(DOMstrings.percentageLabel).textContent =\n          obj.percentage + \"%\";\n      } else {\n        document.querySelector(DOMstrings.percentageLabel).textContent = \"---\";\n      }\n    },\n    displayPercentage: function (percentages) {\n      var fields = document.querySelectorAll(DOMstrings.expensesPercLabel);\n\n      nodeListForEach(fields, function (current, index) {\n        if (percentages[index] > 0) {\n          current.textContent = percentages[index] + \"%\";\n        } else {\n          current.textContent = \"---\";\n        }\n      });\n    },\n\n    /*\n   \n      Adding Month\n\n\n  */\n    displayMonth: function () {\n      var month, now, year, months;\n      now = new Date();\n      months = [\n        \"January\",\n        \"February\",\n        \"March\",\n        \"April\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"August\",\n        \"September\",\n        \"October\",\n        \"November\",\n        \"December\",\n      ];\n      month = now.getMonth();\n      year = now.getFullYear();\n      document.querySelector(DOMstrings.month).textContent =\n        months[month] + \" \" + year;\n    },\n    /*\n          \n          changed the color of border of input typw when we change the input type\n    */\n\n    changedType: function () {\n      var fields = document.querySelectorAll(\n        DOMstrings.inputtype +\n          \",\" +\n          DOMstrings.inputdescription +\n          \",\" +\n          DOMstrings.inputvalue\n      );\n\n      nodeListForEach(fields, function (cur) {\n        cur.classList.toggle(\"red-focus\");\n      });\n      document.querySelector(DOMstrings.inputBtn).classList.toggle(\"red\");\n    },\n\n    getDOMstrings: function () {\n      return DOMstrings;\n    },\n  };\n})();\n//Global App Controller\nvar controller = (function (budgetCtrl, UICtrl) {\n  var setupEventListeners = function () {\n    var DOM = UICtrl.getDOMstrings();\n    document.querySelector(DOM.inputBtn).addEventListener(\"click\", ctrlAddItem);\n    document.addEventListener(\"keypress\", function (event) {\n      if (event.which === 13 || event.keyCode === 13) {\n        ctrlAddItem();\n      }\n    });\n    document\n      .querySelector(DOM.container)\n      .addEventListener(\"click\", ctrlDeleteItem);\n    document\n      .querySelector(DOM.resetBtn)\n      .addEventListener(\"click\", clearStorage);\n    document\n      .querySelector(DOM.inputtype)\n      .addEventListener(\"change\", UICtrl.changedType);\n  };\n  /*\n\n    Update Budget\n\n */\n  var updateBudget = function () {\n    // 1. calculate the budget\n    budgetCtrl.calculateBudget();\n\n    // 2. Return the budget\n    var budget = budgetCtrl.getBudget();\n\n    // 3.Display the budget on the UI.\n    UICtrl.displayBudget(budget);\n  };\n\n  /*\n\n  Update Percentage\n\n  */\n\n  var updatePercentages = function () {\n    // 1.calculate percentages\n    budgetController.calculatePercentage();\n    // 2.Read percentages from the budget controller\n    var percentages = budgetController.getPercentage();\n    // 3.update the UI with the new percentages\n    UICtrl.displayPercentage(percentages);\n  };\n\n  /*\n\n  Adding items\n\n  */\n\n  var ctrlAddItem = function () {\n    var input, newItem;\n    // 1. Get input values.\n    input = UICtrl.getinput();\n\n    if (input.description !== \"\" && !isNaN(input.value) && input.value > 0) {\n      // 2. Add the item to the budget controller.\n      newItem = budgetCtrl.addItem(input.type, input.description, input.value);\n\n      // 3. Add the new item to UI\n      UICtrl.addListItem(newItem, input.type);\n\n      //4.clear the fields\n      UICtrl.clearFields();\n\n      //5. Calculate and Update Budget\n      updateBudget();\n\n      //6. Calculate and Update Percentages\n      updatePercentages();\n    }\n  };\n\n  /*\n   \n      Delete Items\n\n\n  */\n\n  var ctrlDeleteItem = function (event) {\n    var itemID, splitID, type, ID;\n    itemID = event.target.parentNode.parentNode.parentNode.parentNode.id;\n    if (itemID) {\n      //inc-1;\n      splitID = itemID.split(\"-\");\n      type = splitID[0];\n      ID = parseInt(splitID[1]);\n\n      // 1. Delete the item from the data structure\n      budgetCtrl.deleteItem(type, ID);\n\n      // 2. Delete the item from the UI\n      UICtrl.deleteListItems(itemID);\n\n      // 3. update and show the new budget\n      updateBudget();\n\n      //4. Calculate and Update Percentages\n      updatePercentages();\n    }\n  };\n\n  /*\n   \n      Reset Storage\n\n\n  */\n  var clearStorage = function (event) {\n    // localStorage.clear();\n    UICtrl.displayBudget({\n      budget: 0,\n      totalInc: 0,\n      totalExp: 0,\n      percentage: -1,\n    });\n    var type, splitID, ID, input, input1;\n    var localData = JSON.parse(localStorage.getItem(\"Data\"));\n    input = localData.allItems.inc;\n    input1 = localData.allItems.exp;\n    // income\n    input.forEach(function (cur) {\n      if (cur.id) {\n        //inc-1;\n        splitID = cur.id.split(\"-\");\n        type = splitID[0];\n        ID = parseInt(splitID[1]);\n\n        // 1. Delete the item from the data structure\n        budgetCtrl.deleteItem(type, ID);\n\n        // 2. Delete the item from the UI\n        UICtrl.deleteListItems(cur.id);\n      }\n    });\n    // expenditure\n\n    input1.forEach(function (cur) {\n      if (cur.id) {\n        //inc-1;\n        splitID = cur.id.split(\"-\");\n        type = splitID[0];\n        ID = parseInt(splitID[1]);\n\n        // 1. Delete the item from the data structure\n        budgetCtrl.deleteItem(type, ID);\n\n        // 2. Delete the item from the UI\n        UICtrl.deleteListItems(cur.id);\n      }\n    });\n    localStorage.clear();\n  };\n\n  return {\n    init: function () {\n      console.log(\"Application has started\");\n      /*\n\n          updating the data that exist in local storage and display it on screen\n\n      */\n      if (localStorage.length !== 0) {\n        var localData = JSON.parse(localStorage.getItem(\"Data\"));\n        UICtrl.displayBudget({\n          budget: localData.budget,\n          totalInc: localData.totals.inc,\n          totalExp: localData.totals.exp,\n          percentage: localData.percentage,\n        });\n\n        var input, newItem;\n        // 1. Get input values for income\n        input = localData.allItems.inc;\n        input1 = localData.allItems.exp;\n        input.forEach(function (cur) {\n          if (cur.description !== \"\" && !isNaN(cur.value) && cur.value > 0) {\n            // 2. Add the item to the budget controller.\n            newItem = budgetCtrl.addItem(\"inc\", cur.description, cur.value);\n\n            // 3. Add the new item to UI\n            UICtrl.addListItem(newItem, \"inc\");\n          }\n        });\n\n        input1.forEach(function (cur) {\n          if (cur.description !== \"\" && !isNaN(cur.value) && cur.value > 0) {\n            // 2. Add the item to the budget controller.\n            newItem = budgetCtrl.addItem(\"exp\", cur.description, cur.value);\n\n            // 3. Add the new item to UI\n            UICtrl.addListItem(newItem, \"exp\");\n          }\n        });\n      } else {\n        UICtrl.displayBudget({\n          budget: 0,\n          totalInc: 0,\n          totalExp: 0,\n          percentage: -1,\n        });\n      }\n\n      /*\n\n           Adding the month whenever we start or restart our website\n\n      */\n\n      UIController.displayMonth();\n\n      setupEventListeners();\n    },\n  };\n})(budgetController, UIController);\n\ncontroller.init();\n"],"names":["drag","ev","dataTransfer","setData","target","id","allowDrop","event","preventDefault","dropInsideIncome","splitID","type","ID","deletedItem","console","log","data","getData","split","parseInt","$7e7826c51b2a67966a0c063b231575d8$var$budgetController","deleteItem","value","newItemGenerated","addItem","description","document","getElementById","remove","$7e7826c51b2a67966a0c063b231575d8$var$UIController","addListItem","calculateBudget","budget","getBudget","displayBudget","dropInsideExpense","DOMstrings","formatNumber","nodeListForEach","budgetCtrl","UICtrl","updateBudget","updatePercentages","ctrlAddItem","ctrlDeleteItem","clearStorage","Expenses","this","percentage","prototype","calcPercentage","totalIncome","Math","round","getPercentage","Income","calculateTotal","sum","allItems","forEach","cur","totals","exp","inc","des","val","newItem","totalLength","length","push","index","map","current","indexOf","itemToBeDeleted","splice","localStorage","setItem","JSON","stringify","calculatePercentage","totalInc","totalExp","testing","inputtype","inputdescription","inputvalue","inputBtn","incomeContainer","expenseContainer","budgetLabel","incomeLabel","expenseLabel","percentageLabel","container","expensesPercLabel","resetBtn","month","num","numSplit","int","abs","toFixed","substr","list","callback","i","getinput","querySelector","parseFloat","obj","html","newHtml","element","replace","insertAdjacentHTML","deleteListItems","selectorID","el","parentNode","removeChild","clearFields","fields","fieldArr","querySelectorAll","Array","slice","call","array","focus","textContent","displayPercentage","percentages","displayMonth","now","year","months","Date","getMonth","getFullYear","changedType","classList","toggle","getDOMstrings","input","isNaN","itemID","input1","localData","parse","getItem","clear","init","DOM","addEventListener","which","keyCode"],"version":3,"file":"index.5a62cc32.js.map"}